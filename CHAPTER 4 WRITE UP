Based on your project, uploaded files, and implementation so far, here is a **well-structured CHAPTER 4: Results and Discussion** write-up tailored for your blockchain-based investment platform with integrated NFT certificates and local payment gateway (Paynow). This version follows academic conventions and is designed to **score high marks** by being clear, detailed, and structured according to the PDF guide you shared.

---

# **CHAPTER 4: RESULTS AND DISCUSSION**

This chapter presents the **results of the developed decentralized investment platform** with blockchain and NFT integration, discusses testing methodologies, and analyzes the outcomes of the implementation and user interaction. The platform allows campaign creators to launch fundraising campaigns and investors to invest via fiat payment (EcoCash/Paynow), receiving ERC-721 NFT certificates stored on the Ethereum Sepolia Testnet.

---

## **4.1 Hardware and Software Specifications**

### Table 4.1: Computer Specifications

| Hardware  | Technical Specifications | Purpose                                     |
| --------- | ------------------------ | ------------------------------------------- |
| Processor | Intel Core i3 or higher  | System Execution                            |
| RAM       | 8GB+                     | Memory usage during development and testing |
| OS        | Windows 10 / Linux / Mac | Development environment                     |

### Table 4.2: Mobile Hardware Requirements

| Hardware        | Technical Requirements | Purpose                             |
| --------------- | ---------------------- | ----------------------------------- |
| Android Devices | Android 7.0+           | Testing Wallets (MetaMask)          |
| RAM             | 2GB+                   | Application Responsiveness          |
| Storage         | 16GB+                  | MetaMask, browsers, and NFT viewing |

### Table 4.3: Supported Web Browsers

| Browser | Required Version |
| ------- | ---------------- |
| Chrome  | v89+             |
| Firefox | v78+             |
| Safari  | v12+             |
| Edge    | v44+             |

---

## **4.2 Software Stack and APIs Used**

| Technology        | Role in Project                       |
| ----------------- | ------------------------------------- |
| Node.js / Express | Backend REST API                      |
| MongoDB           | Persistent data storage               |
| Ethers.js         | Interact with Ethereum Smart Contract |
| Solidity          | NFT Smart Contract (ERC-721)          |
| Pinata (IPFS)     | Store NFT metadata and images         |
| Paynow            | Fiat payment gateway integration      |
| MetaMask Wallet   | Wallet for NFT visualization          |
| OpenSea           | NFT marketplace / visibility          |
| EJS               | Dynamic frontend rendering            |

---

## **4.3 Test Plan and Strategy**

### **Quality Objectives:**

* Ensure the platform allows investors to make fiat-based investments.
* Mint NFT certificates to investors on successful payment.
* Prevent overfunding of campaigns.
* Ensure KYC, campaign verification, and admin controls work correctly.

### **Testing Strategy**

* **Integration Testing:** Smart contract + Paynow + MongoDB integration.
* **System Testing:** Ensuring minting occurs only after payment confirmation.
* **User Acceptance Testing:** Manual testing of flow across wallet, campaign, and admin dashboard.

---

## **4.4 Key Modules and Test Results**

### Table 4.4: Module Testing

| Module              | Description                               | Outcome                                      |
| ------------------- | ----------------------------------------- | -------------------------------------------- |
| Investor Investment | User invests via EcoCash using Paynow     | ✅ Successful test with Paynow test numbers   |
| NFT Minting         | Mints ERC-721 token after payment success | ✅ Token appears on OpenSea and MetaMask      |
| Wallet Connect      | User connects wallet via MetaMask         | ✅ Displays wallet address dynamically        |
| KYC                 | Upload & admin approval of identity docs  | ✅ Admin can approve/reject                   |
| Campaign Approval   | Admin approves campaign before listing    | ✅ Verified only approved campaigns go public |
| Prevent Overfunding | Campaigns restrict investments after goal | ✅ Button disables + warning displayed        |

---

## **4.5 Functional Implementation Overview**

### **System Flow:**

1. **Campaign Creation** – Business owner creates a campaign with tokenomics and uploads documentation.
2. **Admin Verification** – Admin verifies KYC and campaign.
3. **Investor Action** – Investor views campaigns, connects wallet, and pays via EcoCash.
4. **NFT Minting** – Once Paynow confirms payment, the system automatically:

   * Uploads metadata to IPFS
   * Mints NFT on Sepolia via `mintInvestmentNFT`
   * Records investment on-chain and in MongoDB
5. **Investor Dashboard** – Shows token ID, OpenSea links, and wallet view instructions.

---

## **4.6 Evaluation and Findings**

### **Strengths:**

* **Hybrid architecture:** Combines web2 payment with web3 tokenization.
* **Realism:** Investors use real fiat currency.
* **Compliance layer:** KYC ensures legitimate usage.
* **Transparency:** OpenSea & Etherscan links available for all tokens.

### **Limitations (Addressed):**

* Paynow test mode initially rejected live phone numbers – resolved using test numbers.
* Redirect from Paynow not working – fixed via `pollUrl`.
* MetaMask does not auto-detect testnet NFTs – solved with manual instructions modal.

---

## **4.7 Deployment and User Feedback**

| Deployment Aspect    | Feedback / Result                       |
| -------------------- | --------------------------------------- |
| Admin Dashboard      | Effective for user and campaign control |
| Investment Flow      | Smooth once Paynow credentials were set |
| NFT Visibility       | Verified via OpenSea                    |
| Mobile Compatibility | Works well with MetaMask app and Chrome |

---

## **4.8 Future Improvements**

* **Full Paynow Production Mode Support**
* **Dynamic Token Utility Visualization**
* **Profit Distribution to Token Holders**
* **Custom Investor Analytics**
* **SMS Notifications (via Twilio/ZimConnect)**

---

## **4.9 Summary**

The system successfully combines decentralized technology (NFT smart contracts) with Zimbabwe’s local payment systems (Paynow, EcoCash). Each investment is traceable on-chain and visible through OpenSea, ensuring transparency and trust. Through effective testing and gradual deployment (test mode → live mode), the system demonstrates high reliability, real-world relevance, and a full investor-to-campaign experience.

---

Would you like help generating the **screenshots and labeled figures** for inclusion in this chapter, or converting this to a formal PDF/Word document with styles?
