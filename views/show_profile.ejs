<%- include("partials/header") -%>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= user.username %>'s Profile | Tokenized Portfolio</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            --profit-gradient: linear-gradient(135deg, #0dcaf0 0%, #0dcaf080 100%);
            --equity-gradient: linear-gradient(135deg, #0d6efd 0%, #0d6efd80 100%);
            --hybrid-gradient: linear-gradient(135deg, #198754 0%, #19875480 100%);
            --card-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
            --glass-bg: rgba(255, 255, 255, 0.85);
            --glass-border: rgba(255, 255, 255, 0.2);
        }
        
        body {
            background-color: #f8fafc;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            overflow-x: hidden;
        }
        
        .glass-card {
            background: var(--glass-bg);
            backdrop-filter: blur(12px);
            border-radius: 16px;
            border: 1px solid var(--glass-border);
            box-shadow: var(--card-shadow);
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        }
        
        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 16px 32px rgba(0, 0, 0, 0.12);
        }
        
        .profile-header {
            background: var(--primary-gradient);
            clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
            padding-bottom: 8rem;
            position: relative;
            overflow: hidden;
        }
        
        .profile-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }
        
        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .avatar-container {
            margin-top: -5rem;
            position: relative;
            z-index: 2;
        }
        
        .avatar-img {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid white;
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
        }
        
        .avatar-img:hover {
            transform: scale(1.05);
        }
        
        .token-card {
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            position: relative;
            z-index: 1;
        }
        
        .token-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: inherit;
            z-index: -1;
        }
        
        .profit-card { background: var(--profit-gradient); }
        .equity-card { background: var(--equity-gradient); }
        .hybrid-card { background: var(--hybrid-gradient); }
        
        .token-badge {
            font-size: 0.7rem;
            font-weight: 700;
            letter-spacing: 0.5px;
            padding: 0.35rem 0.7rem;
            border-radius: 50px;
            text-transform: uppercase;
            backdrop-filter: blur(5px);
        }
        
        .badge-profit { background-color: rgba(255,255,255,0.9); color: #000; }
        .badge-equity { background-color: rgba(0,0,0,0.7); color: #fff; }
        .badge-hybrid { background-color: rgba(255,255,255,0.9); color: #000; }
        
        .wallet-address {
            font-family: 'Courier New', monospace;
            background: rgba(0,0,0,0.05);
            padding: 0.5rem;
            border-radius: 8px;
            font-size: 0.85rem;
            word-break: break-all;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .wallet-address:hover {
            background: rgba(0,0,0,0.1);
        }
        
        .qr-code-placeholder {
            width: 100px;
            height: 100px;
            background: #f1f5f9;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .qr-code-placeholder:hover {
            transform: scale(1.05);
        }
        
        .section-divider {
            position: relative;
            margin: 3rem 0;
            text-align: center;
        }
        
        .section-divider:before {
            content: "";
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(0,0,0,0.1), transparent);
            z-index: -1;
        }
        
        .section-divider-text {
            display: inline-block;
            background: white;
            padding: 0 1.5rem;
            font-size: 0.9rem;
            font-weight: 600;
            color: #64748b;
            position: relative;
        }
        
        .section-divider-text::before,
        .section-divider-text::after {
            content: "";
            position: absolute;
            top: 50%;
            width: 30px;
            height: 2px;
            background: linear-gradient(90deg, #6a11cb, #2575fc);
        }
        
        .section-divider-text::before {
            left: -35px;
        }
        
        .section-divider-text::after {
            right: -35px;
        }
        
        .value-change {
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .value-change.positive {
            color: #198754;
        }
        
        .value-change.negative {
            color: #dc3545;
        }
        
        .floating-shapes {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            overflow: hidden;
            z-index: 0;
        }
        
        .floating-shapes div {
            position: absolute;
            border-radius: 50%;
            background: rgba(255,255,255,0.1);
            animation: float 15s infinite linear;
        }
        
        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            100% { transform: translateY(-1000px) rotate(720deg); }
        }
        
        .token-value-chart {
            height: 60px;
            width: 100%;
            position: relative;
            overflow: hidden;
        }
        
        .chart-line {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: rgba(255,255,255,0.5);
        }
        
        .chart-point {
            position: absolute;
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background: white;
            transform: translate(-50%, 50%);
        }
        
        .interactive-bg {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background: radial-gradient(circle at var(--x) var(--y), rgba(106,17,203,0.1) 0%, transparent 70%);
            pointer-events: none;
            z-index: 0;
        }
        
        @media (max-width: 768px) {
            .profile-header {
                clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
                padding-bottom: 6rem;
            }
            
            .section-divider-text::before,
            .section-divider-text::after {
                width: 15px;
            }
            
            .section-divider-text::before {
                left: -20px;
            }
            
            .section-divider-text::after {
                right: -20px;
            }
        }
    </style>
</head>
<body>
    <!-- Interactive Background -->
    <div class="interactive-bg" id="interactiveBg"></div>
    
    <!-- Floating Shapes -->
    <div class="floating-shapes">
        <div style="width: 100px; height: 100px; top: 20%; left: 10%; animation-delay: 0s;"></div>
        <div style="width: 150px; height: 150px; top: 70%; left: 80%; animation-delay: 3s;"></div>
        <div style="width: 60px; height: 60px; top: 40%; left: 50%; animation-delay: 6s;"></div>
    </div>

    <!-- Profile Header -->
    <div class="profile-header text-center text-white pt-5">
        <div class="container position-relative" style="z-index: 1;">
            <h1 class="display-5 fw-bold mb-3" data-aos="fade-down"><%= user.username %></h1>
            <p class="lead mb-4" data-aos="fade-down" data-aos-delay="100"><%= user.bio || "Tokenized investment portfolio" %></p>
        </div>
    </div>

    <div class="container position-relative" style="z-index: 1;">
        <!-- Avatar and Basic Info -->
        <div class="row justify-content-center avatar-container">
            <div class="col-lg-8">
                <div class="glass-card p-4 text-center" data-aos="fade-up">
                    <img src="<%= user.profilePicture || '/default-avatar.png' %>" alt="Profile" class="avatar-img mb-3">
                    
                    <div class="d-flex justify-content-center gap-3 mb-3 flex-wrap">
                        <span class="badge bg-light text-dark">
                            <i class="bi bi-<%= user.role === 'investor' ? 'coin' : 'lightbulb' %> me-1"></i> 
                            <%= user.role === 'investor' ? 'Investor' : 'Creator' %>
                        </span>
                        <span class="badge bg-light text-dark">
                            <i class="bi bi-calendar me-1"></i> 
                            Joined <%= new Date(user.createdAt).toLocaleDateString() %>
                        </span>
                        <% if(user.walletAddress) { %>
                            <span class="badge bg-success text-white">
                                <i class="bi bi-check-circle me-1"></i> 
                                Wallet Connected
                            </span>
                        <% } %>
                    </div>
                    
                    <% if(user.walletAddress) { %>
                        <div class="mb-3" data-aos="fade-up" data-aos-delay="100">
                            <p class="small text-muted mb-1">Blockchain Wallet</p>
                            <div class="wallet-address d-inline-block" 
                                 data-bs-toggle="tooltip" 
                                 title="Click to copy"
                                 onclick="copyToClipboard('<%= user.walletAddress %>')">
                                <i class="bi bi-wallet2"></i> 
                                <%= user.walletAddress.substring(0, 6) %>...<%= user.walletAddress.substring(user.walletAddress.length - 4) %>
                            </div>
                        </div>
                    <% } else if(currentUser && currentUser._id.equals(user._id)) { %>
                        <div class="mb-3" data-aos="fade-up" data-aos-delay="100">
                            <button class="btn btn-primary connect-wallet">
                                <i class="bi bi-wallet2 me-1"></i> Connect Wallet
                            </button>
                            <p class="small text-muted mt-2">Connect to manage your tokens</p>
                        </div>
                    <% } %>
                    
                    <div class="d-flex justify-content-center gap-2" data-aos="fade-up" data-aos-delay="150">
                        <button class="btn btn-primary rounded-pill px-4">
                            <i class="bi bi-person-plus me-1"></i> Follow
                        </button>
                        <button class="btn btn-outline-secondary rounded-pill px-4">
                            <i class="bi bi-envelope me-1"></i> Message
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Token Portfolio Section -->
        <div class="row justify-content-center mt-4">
            <div class="col-lg-8">
                <h3 class="h5 fw-bold mb-4 d-flex align-items-center" data-aos="fade-up">
                    <i class="bi bi-wallet2 me-2"></i> Token Holdings
                    <span class="badge bg-primary ms-2"><%= userTokens.length %> assets</span>
                </h3>
                
                <% if(userTokens.length > 0) { %>
                    <div class="row row-cols-1 row-cols-md-2 g-4">
                        <% userTokens.forEach((token, index) => { %>
                            <div class="col" data-aos="fade-up" data-aos-delay="<%= index * 50 %>">
                                <div class="token-card <%= token.tokenType === 'profit' ? 'profit-card' : 
                                                      token.tokenType === 'ownership' ? 'equity-card' : 'hybrid-card' %> p-4 text-white">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <div>
                                            <h5 class="fw-bold mb-1"><%= token.campaignTitle %></h5>
                                            <span class="badge-<%= token.tokenType %> token-badge">
                                                <%= token.tokenType.toUpperCase() %>
                                            </span>
                                        </div>
                                        <span class="fw-bold"><%= token.amount.toLocaleString() %> <%= token.tokenName %></span>
                                    </div>
                                    
                                    <!-- Mini Value Chart (Placeholder) -->
                                    <div class="token-value-chart mb-3">
                                        <div class="chart-line"></div>
                                        <div class="chart-point" style="left: 10%; bottom: 30%;"></div>
                                        <div class="chart-point" style="left: 30%; bottom: 50%;"></div>
                                        <div class="chart-point" style="left: 50%; bottom: 70%;"></div>
                                        <div class="chart-point" style="left: 70%; bottom: 40%;"></div>
                                        <div class="chart-point" style="left: 90%; bottom: 60%;"></div>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between align-items-end">
                                        <div>
                                            <p class="small mb-1">Current Value</p>
                                            <h4 class="fw-bold mb-0">
                                                $<%= (token.amount * token.valuePerToken).toLocaleString() %>
                                            </h4>
                                            <span class="value-change positive">
                                                <i class="bi bi-arrow-up"></i> 5.2%
                                            </span>
                                        </div>
                                        
                                        <div class="text-end">
                                            <p class="small mb-1">Rights</p>
                                            <% if(token.tokenType === 'profit') { %>
                                                <span class="badge bg-white text-dark">
                                                    <%= token.profitSharePercentage %>% Profit Share
                                                </span>
                                            <% } else if(token.tokenType === 'ownership') { %>
                                                <span class="badge bg-dark">
                                                    <%= token.ownershipPercentage %>% Equity
                                                </span>
                                            <% } else { %>
                                                <span class="badge bg-white text-dark">
                                                    <%= token.ownershipPerToken %>% + Rewards
                                                </span>
                                            <% } %>
                                        </div>
                                    </div>
                                    
                                    <div class="mt-3 pt-3 border-top border-white border-opacity-25">
                                        <div class="d-flex justify-content-between">
                                            <a href="/campaigns/<%= token.campaignId %>" class="btn btn-sm btn-outline-light">
                                                View Campaign
                                            </a>
                                            <button class="btn btn-sm btn-light" 
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#certificateModal<%= token._id %>"
                                                    onclick="generateQRCode('<%= token.transactionHash %>', 'qrCode<%= token._id %>')">
                                                <i class="bi bi-file-earmark-pdf"></i> Certificate
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Certificate Modal for each token -->
                            <div class="modal fade" id="certificateModal<%= token._id %>" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Investment Certificate</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="text-center mb-4">
                                                <div id="qrCode<%= token._id %>" class="qr-code-placeholder mx-auto mb-3">
                                                    <i class="bi bi-qr-code" style="font-size: 2rem;"></i>
                                                </div>
                                                <p class="small text-muted">Scan to verify on blockchain</p>
                                            </div>
                                            
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Campaign</p>
                                                        <h6><%= token.campaignTitle %></h6>
                                                    </div>
                                                    
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Token Type</p>
                                                        <h6><%= token.tokenType.toUpperCase() %></h6>
                                                    </div>
                                                    
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Amount Held</p>
                                                        <h6><%= token.amount %> <%= token.tokenName %></h6>
                                                    </div>
                                                </div>
                                                
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Current Value</p>
                                                        <h6>$<%= (token.amount * token.valuePerToken).toLocaleString() %></h6>
                                                    </div>
                                                    
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Acquisition Date</p>
                                                        <h6><%= new Date(token.timeCreated).toLocaleDateString() %></h6>
                                                    </div>
                                                    
                                                    <div class="mb-3">
                                                        <p class="small text-muted mb-1">Transaction</p>
                                                        <h6 class="text-truncate"><%= token.transactionHash %></h6>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="mt-4 pt-3 border-top">
                                                <div class="d-flex justify-content-between">
                                                    <button class="btn btn-outline-secondary">
                                                        <i class="bi bi-share"></i> Share
                                                    </button>
                                                    <a href="/certificates/<%= token._id %>" class="btn btn-primary">
                                                        <i class="bi bi-download"></i> Download PDF
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="glass-card p-5 text-center" data-aos="fade-up">
                        <i class="bi bi-wallet2" style="font-size: 3rem; color: #64748b;"></i>
                        <h4 class="mt-3">No Token Holdings</h4>
                        <p class="text-muted"><%= user.username %> hasn't acquired any tokens yet</p>
                        <a href="/campaigns" class="btn btn-primary mt-2">
                            <i class="bi bi-currency-dollar"></i> Browse Investments
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
        
        <div class="section-divider" data-aos="fade-up">
            <span class="section-divider-text">Portfolio Value</span>
        </div>
        
        <!-- Portfolio Summary -->
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="glass-card p-4" data-aos="fade-up">
                    <div class="row">
                        <div class="col-md-4 text-center border-end">
                            <p class="small text-muted mb-1">Total Value</p>
                            <h3 class="fw-bold">
                                $<%= userTokens.reduce((sum, token) => sum + (token.amount * token.valuePerToken), 0).toLocaleString() %>
                            </h3>
                        </div>
                        <div class="col-md-4 text-center border-end">
                            <p class="small text-muted mb-1">Total Tokens</p>
                            <h3 class="fw-bold">
                                <%= userTokens.reduce((sum, token) => sum + token.amount, 0).toLocaleString() %>
                            </h3>
                        </div>
                        <div class="col-md-4 text-center">
                            <p class="small text-muted mb-1">Diversification</p>
                            <h3 class="fw-bold">
                                <%= userTokens.length %> asset<%= userTokens.length !== 1 ? 's' : '' %>
                            </h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Created Campaigns -->
        <div class="row justify-content-center mt-5">
            <div class="col-lg-8">
                <h3 class="h5 fw-bold mb-4 d-flex align-items-center" data-aos="fade-up">
                    <i class="bi bi-lightbulb me-2"></i> Created Campaigns
                </h3>
                
                <% if(campaigns && campaigns.length > 0) { %>
                    <div class="row row-cols-1 row-cols-md-2 g-4">
                        <% campaigns.forEach((campaign, index) => { %>
                            <div class="col" data-aos="fade-up" data-aos-delay="<%= index * 50 %>">
                                <div class="glass-card h-100">
                                    <div class="p-4">
                                        <div class="d-flex justify-content-between align-items-start mb-3">
                                            <h5 class="fw-bold mb-0"><%= campaign.title %></h5>
                                            <span class="badge bg-<%= campaign.status === 'active' ? 'success' : 
                                                                    campaign.status === 'funded' ? 'primary' : 'secondary' %>">
                                                <%= campaign.status.toUpperCase() %>
                                            </span>
                                        </div>
                                        
                                        <p class="text-muted small mb-4"><%= campaign.description.substring(0, 100) %><%= campaign.description.length > 100 ? '...' : '' %></p>
                                        
                                        <div class="progress mb-3" style="height: 6px;">
                                            <div class="progress-bar" 
                                                 style="width: <%= Math.min((campaign.amountRaised / campaign.goalAmount) * 100, 100) %>%">
                                            </div>
                                        </div>
                                        
                                        <div class="d-flex justify-content-between small text-muted mb-4">
                                            <span>Raised: $<%= campaign.amountRaised.toLocaleString() %></span>
                                            <span>Goal: $<%= campaign.goalAmount.toLocaleString() %></span>
                                        </div>
                                        
                                        <div class="d-flex justify-content-between small mb-3">
                                            <span><i class="bi bi-people"></i> <%= campaign.investors.length %> investors</span>
                                            <span><i class="bi bi-coin"></i> <%= campaign.tokenSymbol %></span>
                                        </div>
                                        
                                        <a href="/campaigns/<%= campaign._id %>" class="btn btn-outline-primary w-100">
                                            View Campaign
                                        </a>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="glass-card p-5 text-center" data-aos="fade-up">
                        <i class="bi bi-lightbulb" style="font-size: 3rem; color: #64748b;"></i>
                        <h4 class="mt-3">No Campaigns Created</h4>
                        <p class="text-muted"><%= user.username %> hasn't launched any campaigns yet</p>
                        <% if(currentUser && currentUser._id.equals(user._id)) { %>
                            <a href="/campaigns/new" class="btn btn-primary mt-2">
                                <i class="bi bi-plus-circle"></i> Create Campaign
                            </a>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.1/build/qrcode.min.js"></script>
    <script>
        // Initialize AOS animation
        AOS.init({
            duration: 800,
            easing: 'ease-in-out',
            once: true
        });
        
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Interactive background effect
            const interactiveBg = document.getElementById('interactiveBg');
            document.addEventListener('mousemove', (e) => {
                const x = e.clientX / window.innerWidth;
                const y = e.clientY / window.innerHeight;
                interactiveBg.style.setProperty('--x', `${x * 100}%`);
                interactiveBg.style.setProperty('--y', `${y * 100}%`);
            });
        });
        
        // Copy to clipboard function
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                const tooltip = bootstrap.Tooltip.getInstance(document.querySelector('[data-bs-toggle="tooltip"]'));
                const originalTitle = tooltip._config.title;
                tooltip.setContent({'.tooltip-inner': 'Copied!'});
                setTimeout(() => {
                    tooltip.setContent({'.tooltip-inner': originalTitle});
                }, 2000);
            });
        }
        
        // Generate QR code
        function generateQRCode(text, elementId) {
            const qrElement = document.getElementById(elementId);
            qrElement.innerHTML = '';
            QRCode.toCanvas(text, { width: 100 }, (error, canvas) => {
                if (error) {
                    qrElement.innerHTML = '<i class="bi bi-qr-code" style="font-size: 2rem;"></i>';
                    console.error('QR code generation error:', error);
                } else {
                    qrElement.appendChild(canvas);
                }
            });
        }
        
        // Connect wallet functionality
        document.querySelectorAll('.connect-wallet').forEach(btn => {
            btn.addEventListener('click', async function() {
                if (typeof window.ethereum !== 'undefined') {
                    try {
                        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
                        
                        // Show loading state
                        const button = this;
                        const originalHtml = button.innerHTML;
                        button.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Connecting...';
                        button.disabled = true;
                        
                        // Send to server to associate with user
                        const response = await fetch('/api/users/wallet', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ walletAddress: accounts[0] })
                        });
                        
                        if (response.ok) {
                            location.reload();
                        } else {
                            button.innerHTML = originalHtml;
                            button.disabled = false;
                            alert('Failed to connect wallet. Please try again.');
                        }
                    } catch (error) {
                        console.error('Wallet connection error:', error);
                        alert('Wallet connection failed: ' + error.message);
                    }
                } else {
                    // Show modal with wallet options
                    const walletModal = new bootstrap.Modal(document.getElementById('walletModal'));
                    walletModal.show();
                }
            });
        });
        
        // Token transfer functionality
        async function transferToken(tokenId) {
            if (!window.ethereum || !window.ethereum.selectedAddress) {
                alert('Please connect your wallet first');
                return;
            }
            
            const recipient = prompt('Enter recipient wallet address:');
            if (!recipient || !ethers.utils.isAddress(recipient)) {
                alert('Please enter a valid Ethereum address');
                return;
            }
            
            const amount = prompt('Enter amount to transfer:');
            if (!amount || isNaN(amount) || amount <= 0) {
                alert('Please enter a valid amount');
                return;
            }
            
            try {
                const provider = new ethers.providers.Web3Provider(window.ethereum);
                const signer = provider.getSigner();
                
                const contract = new ethers.Contract(
                    '<%= contractAddress %>',
                    <%- JSON.stringify(erc1155ABI) %>,
                    signer
                );
                
                const tx = await contract.safeTransferFrom(
                    await signer.getAddress(),
                    recipient,
                    tokenId,
                    amount,
                    '0x'
                );
                
                alert(`Transaction submitted: ${tx.hash}`);
            } catch (error) {
                console.error('Transfer error:', error);
                alert('Transfer failed: ' + error.message);
            }
        }
    </script>
</body>
</html>

<%- include("partials/footer") -%>