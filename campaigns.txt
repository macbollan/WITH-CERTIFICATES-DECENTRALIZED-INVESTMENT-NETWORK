<%- include("partials/header") -%>

<style>
    /* 3D Card Effect with Gradient Shadows */
    .campaign-card-3d {
        position: relative;
        border-radius: 16px;
        overflow: hidden;
        transform-style: preserve-3d;
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        box-shadow: 
            0 10px 30px -5px rgba(0, 0, 0, 0.1),
            0 4px 6px -4px rgba(0, 0, 0, 0.05);
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    }

    .campaign-card-3d:hover {
        transform: translateY(-10px) rotateX(5deg) rotateY(-2deg);
        box-shadow: 
            0 20px 60px -10px rgba(0, 0, 0, 0.2),
            0 10px 20px -10px rgba(0, 0, 0, 0.1);
    }

    /* Holographic Token Badge */
    .holographic-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        z-index: 2;
        font-size: 0.7rem;
        padding: 0.35em 0.65em;
        border-radius: 50rem;
        background: linear-gradient(
            135deg,
            rgba(255,255,255,0.3) 0%,
            rgba(255,255,255,0.1) 100%
        );
        backdrop-filter: blur(10px);
        color: white;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
        border: 1px solid rgba(255,255,255,0.2);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        animation: holographic-shine 8s infinite linear;
    }

    @keyframes holographic-shine {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    /* Parallax Image Effect */
    .parallax-image-container {
        height: 200px;
        overflow: hidden;
        position: relative;
        transform-style: preserve-3d;
    }

    .parallax-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease-out;
        will-change: transform;
    }

    .campaign-card-3d:hover .parallax-image {
        transform: scale(1.1) translateZ(20px);
    }

    /* Liquid Progress Bar */
    .liquid-progress {
        height: 8px;
        border-radius: 4px;
        background: rgba(0,0,0,0.05);
        overflow: hidden;
        position: relative;
    }

    .liquid-progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #6a11cb 0%, #2575fc 100%);
        position: relative;
        transition: width 0.6s cubic-bezier(0.65, 0, 0.35, 1);
    }

    .liquid-progress-fill::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
            to bottom right,
            rgba(255,255,255,0.3) 0%,
            rgba(255,255,255,0) 50%,
            rgba(255,255,255,0.3) 100%
        );
        transform: rotate(30deg);
        animation: liquid-shine 3s infinite linear;
    }

    @keyframes liquid-shine {
        0% { transform: translateX(-100%) rotate(30deg); }
        100% { transform: translateX(100%) rotate(30deg); }
    }

    /* Floating Token Visualization */
    .token-visualization-3d {
        perspective: 1000px;
        height: 80px;
        position: relative;
        margin: 15px 0;
    }

    .token-coin {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 50%;
        position: absolute;
        left: 50%;
        transform: translateX(-50%) rotateY(0deg);
        box-shadow: 
            0 4px 8px rgba(0,0,0,0.1),
            inset 0 -4px 8px rgba(0,0,0,0.1),
            inset 0 4px 8px rgba(255,255,255,0.5);
        transition: all 0.5s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: #212529;
    }

    .campaign-card-3d:hover .token-coin {
        animation: token-spin 2s infinite linear;
    }

    @keyframes token-spin {
        0% { transform: translateX(-50%) rotateY(0deg); }
        100% { transform: translateX(-50%) rotateY(360deg); }
    }

    /* Glow Effect on Hover */
    .glow-on-hover {
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

    .glow-on-hover::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            135deg,
            rgba(255,255,255,0.1) 0%,
            rgba(255,255,255,0) 100%
        );
        z-index: -1;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .glow-on-hover:hover::before {
        opacity: 1;
    }

    /* Modal Enhancements */
    .modal-enhancement {
        border: none;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 10px 50px rgba(0, 0, 0, 0.2);
    }

    .modal-header-enhancement {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        border-bottom: none;
    }

    .modal-body-enhancement {
        padding: 2rem;
    }

    /* Form Field Styling */
    .form-control-enhanced {
        border-radius: 8px;
        padding: 12px 15px;
        border: 1px solid #e0e0e0;
        transition: all 0.3s ease;
    }

    .form-control-enhanced:focus {
        border-color: #6a11cb;
        box-shadow: 0 0 0 0.25rem rgba(106, 17, 203, 0.25);
    }

    /* Token Type Specific Styling */
    .token-type-selector {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .token-type-option {
        flex: 1;
        text-align: center;
        padding: 15px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .token-type-option:hover {
        transform: translateY(-3px);
    }

    .token-type-option.active {
        border-color: #6a11cb;
        background-color: rgba(106, 17, 203, 0.1);
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
        .campaign-card-3d:hover {
            transform: translateY(-5px);
        }
        
        .parallax-image-container {
            height: 150px;
        }

        .modal-body-enhancement {
            padding: 1.5rem;
        }
        
        .token-type-selector {
            flex-direction: column;
        }
    }
</style>

<body class="bg-light">
    <!-- Animated Background Particles -->
    <div class="particles-container position-fixed w-100 h-100" style="z-index: -1;"></div>

    <div class="container-fluid px-lg-5 py-4">
        <!-- Hero Header with Parallax Effect -->
        <div class="hero-header mb-5 text-center" data-aos="fade-down">
            <h1 class="display-4 fw-bold mb-3 gradient-text">Discover Tokenized Campaigns</h1>
            <p class="lead text-muted">Invest in the future with blockchain-powered assets</p>
            
            <% if(currentUser) { %>
                <button class="btn btn-primary btn-lg mt-3 glow-on-hover" 
                        data-bs-toggle="modal" 
                        data-bs-target="#createCampaignModal">
                    <i class="bi bi-plus-circle"></i> Launch Your Campaign
                </button>
            <% } else { %>
                <div class="d-flex justify-content-center gap-3 mt-3">
                    <a href="/register" class="btn btn-primary btn-lg glow-on-hover">
                        <i class="bi bi-person-plus"></i> Join Now
                    </a>
                    <a href="/campaigns" class="btn btn-outline-primary btn-lg">
                        <i class="bi bi-collection"></i> Explore
                    </a>
                </div>
            <% } %>
        </div>

        <% if(campaigns.length < 1) { %>
            <div class="card shadow-sm border-0 overflow-hidden" data-aos="fade-up">
                <div class="card-body text-center py-5">
                    <div class="empty-state-animation mb-4">
                        <i class="bi bi-rocket-takeoff display-1 text-muted"></i>
                        <div class="particle-1"></div>
                        <div class="particle-2"></div>
                    </div>
                    <h3 class="text-muted mb-3">No Campaigns Yet</h3>
                    <p class="text-muted mb-4">Be the pioneer to launch the first tokenized campaign</p>
                    <% if(currentUser) { %>
                        <button class="btn btn-primary btn-lg glow-on-hover" 
                                data-bs-toggle="modal" 
                                data-bs-target="#createCampaignModal">
                            <i class="bi bi-rocket-takeoff"></i> Launch First Campaign
                        </button>
                    <% } else { %>
                        <a href="/register" class="btn btn-primary btn-lg glow-on-hover">
                            <i class="bi bi-person-plus"></i> Register to Create
                        </a>
                    <% } %>
                </div>
            </div>
        <% } %>

        <!-- Campaign Grid with 3D Effects -->
        <div class="row row-cols-1 row-cols-sm-2 row-cols-xl-3 row-cols-xxl-4 g-4">
            <% campaigns.forEach((campaign, index) => { %>
                <div class="col" data-aos="fade-up" data-aos-delay="<%= index * 50 %>">
                    <div class="campaign-card-3d h-100">
                        <!-- Parallax Image -->
                        <div class="parallax-image-container">
                            <% if(campaign.image) { %>
                                <img src="<%= campaign.image %>" class="parallax-image" alt="<%= campaign.title %>">
                            <% } else { %>
                                <div class="h-100 d-flex align-items-center justify-content-center bg-gradient-<%= 
                                    campaign.tokenType === 'profit' ? 'info' : 
                                    campaign.tokenType === 'ownership' ? 'primary' : 'success' %>">
                                    <h4 class="text-white m-0"><%= campaign.tokenSymbol || 'TKN' %></h4>
                                </div>
                            <% } %>
                            <span class="holographic-badge <%= 
                                campaign.tokenType === 'profit' ? 'bg-info' : 
                                campaign.tokenType === 'ownership' ? 'bg-primary' : 'bg-success' %>">
                                <i class="bi bi-<%= 
                                    campaign.tokenType === 'profit' ? 'graph-up' : 
                                    campaign.tokenType === 'ownership' ? 'building' : 'collection' 
                                %> me-1"></i>
                                <%= campaign.tokenType.toUpperCase() %>
                            </span>
                        </div>

                        <!-- Card Body -->
                        <div class="card-body position-relative">
                            <!-- 3D Token Visualization -->
                            <div class="token-visualization-3d">
                                <div class="token-coin">
                                    <%= campaign.tokenSymbol || 'TKN' %>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                  <h5 class="card-title mb-1"><%= campaign.title %></h5>
                              
                                  <div class="d-flex align-items-center gap-2">
              
                                    by  <a href="/<%= campaign.owner._id %>/users/" class="fw-semibold text-primary text-decoration-none">
                                         <%=  campaign.owner.username %>
                                      </a>&nbsp;
                                      
                                      <% if (campaign.owner.kycStatus === 'verified') { %>
                                        <span class="badge bg-success me-2">
                                            <i class="bi bi-patch-check-fill me-1"></i> Verified
                                          </span>
                                      <% } else if (campaign.owner.kycStatus === 'pending') { %>
                                        <span class="badge bg-warning text-dark me-2">
                                            <i class="bi bi-hourglass-split me-1"></i> KYC Pending
                                          </span>
                                      <% } else { %>
                                        <span class="badge bg-secondary me-2">
                                            <i class="bi bi-exclamation-circle me-1"></i> Not Verified
                                          </span>
                                      <% } %>

                                  </div>
                                </div>
                              
                                <span class="badge bg-<%= 
                                    campaign.status === 'active' ? 'success' : 
                                    campaign.status === 'funded' ? 'primary' : 'secondary' 
                                %>">
                                    <%= campaign.status.toUpperCase() %>
                                </span>
                            </div>
                            <p class="card-text text-muted mb-3" style="min-height: 60px;">
                                <%= campaign.description.substring(0, 100) %><%= campaign.description.length > 100 ? '...' : '' %>
                            </p>

                            <!-- Liquid Progress Bar -->
                            <div class="mb-3">
                                <div class="d-flex justify-content-between small text-muted mb-2">
                                    <span>$<%= campaign.amountRaised.toLocaleString() %> raised</span>
                                    <span>$<%= campaign.goalAmount.toLocaleString() %> goal</span>
                                </div>
                                <div class="liquid-progress">
                                    <div class="liquid-progress-fill" 
                                         style="width: <%= Math.min((campaign.amountRaised / campaign.goalAmount) * 100, 100) %>%">
                                    </div>
                                </div>
                            </div>

                            
                            <% const remaining = campaign.goalAmount - campaign.amountRaised; %>
                            <% if (remaining <= 500 && campaign.goalAmount > campaign.amountRaised) { %> <!-- or a % threshold -->

                            <div class="alert alert-warning p-1 mt-2 small">
                                Only $<%= remaining.toFixed(2) %> left to reach the goal!
                            </div>
                            <% } %>


                            <!-- Action Buttons -->
                            <div class="d-grid gap-2">
                                <a href="/campaigns/<%= campaign._id %>" class="btn btn-outline-primary glow-on-hover">
                                    <i class="bi bi-eye"></i> View Details
                                </a>
                                
                                <% if(currentUser && currentUser._id.equals(campaign.owner._id)) { %>
                                    <div class="btn-group">
                                        <button class="btn btn-outline-secondary glow-on-hover" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editCampaignModal"
                                                onclick="loadEditForm('<%= campaign._id %>')">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button type="button" class="btn btn-outline-danger glow-on-hover" 
                                                onclick="confirmDelete('<%= campaign._id %>')">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                <% } else if(currentUser) { %>

                                    <% if (campaign.status === "funded" || campaign.goalAmount <= campaign.amountRaised) { %>
                                        <button class="btn btn-secondary" disabled>
                                            <i class="bi bi-check2-circle"></i> Funding Complete
                                        </button>
                                    <% } else if (currentUser && !currentUser._id.equals(campaign.owner._id)) { %>

                                    <button class="btn btn-success glow-on-hover" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#investModal"
                                            onclick="setupInvestmentModal(
                                                '<%= campaign._id %>',
                                                '<%= campaign.title %>',
                                                '<%= campaign.tokenType %>',
                                                '<%= campaign.tokenSymbol %>',
                                                <%= campaign.goalAmount %>,
                                                <%= campaign.totalTokens %>,
                                                <%= campaign.tokenMetadata.profitSharePercentage || 0 %>,
                                                <%= campaign.tokenMetadata.ownershipPercentage || 0 %>,
                                                '<%= campaign.tokenMetadata.ownershipPerToken || '' %>'
                                            )">
                                        <i class="bi bi-currency-dollar"></i> Invest Now
                                    </button>
                                    <!-- Show Invest Button -->
                                 <% } %>
                                <% } else { %>
                                    <a href="/login?redirect=/campaigns" class="btn btn-warning glow-on-hover">
                                        <i class="bi bi-box-arrow-in-right"></i> Login to Invest
                                    </a>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

 <!-- Create Campaign Modal (Complete) -->
<div class="modal fade" id="createCampaignModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content modal-enhancement">
            <div class="modal-header modal-header-enhancement">
                <h5 class="modal-title">Create New Campaign</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body modal-body-enhancement">
                <form id="createCampaignForm" action="/campaigns/create" method="POST" enctype="multipart/form-data" onsubmit="return validateCampaignForm()">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="title" class="form-label">Campaign Title *</label>
                            <input type="text" class="form-control form-control-enhanced" id="title" name="title" required>
                        </div>
                        <div class="col-md-6">
                            <label for="goalAmount" class="form-label">Goal Amount ($) *</label>
                            <input type="number" class="form-control form-control-enhanced" id="goalAmount" name="goalAmount" min="1" required>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="description" class="form-label">Description *</label>
                        <textarea class="form-control form-control-enhanced" id="description" name="description" rows="4" required></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="campaignImage" class="form-label">Campaign Image</label>
                        <input class="form-control form-control-enhanced" type="file" id="campaignImage" name="image" accept="image/*">
                    </div>
                    
                    <!-- Token Type Selection -->
                    <div class="mb-4">
                        <label class="form-label">Token Type *</label>
                        <div class="token-type-selector">
                            <div class="token-type-option" data-type="profit" onclick="selectTokenType('profit')">
                                <i class="bi bi-graph-up fs-4"></i>
                                <h6 class="mt-2">Profit Share</h6>
                                <small class="text-muted">Investors receive % of profits</small>
                            </div>
                            <div class="token-type-option" data-type="ownership" onclick="selectTokenType('ownership')">
                                <i class="bi bi-building fs-4"></i>
                                <h6 class="mt-2">Ownership</h6>
                                <small class="text-muted">Investors receive equity stake</small>
                            </div>
                            <div class="token-type-option" data-type="hybrid" onclick="selectTokenType('hybrid')">
                                <i class="bi bi-collection fs-4"></i>
                                <h6 class="mt-2">Hybrid</h6>
                                <small class="text-muted">Combination of ownership + rewards</small>
                            </div>
                        </div>
                        <input type="hidden" id="tokenType" name="tokenType" required>
                    </div>
                    
                    <!-- Token Configuration -->
                    <div class="card mb-3">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Token Configuration</h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="tokenSymbol" class="form-label">Token Symbol *</label>
                                    <input type="text" class="form-control form-control-enhanced" id="tokenSymbol" name="tokenSymbol" 
                                        maxlength="8" required pattern="[A-Z0-9]{3,8}" placeholder="e.g., SOLAR">
                                </div>
                                <div class="col-md-6">
                                    <label for="totalTokens" class="form-label">Total Tokens *</label>
                                    <input type="number" class="form-control form-control-enhanced" id="totalTokens" name="totalTokens" min="1" required>
                                </div>
                            </div>
                            
                            <!-- Profit Fields -->
                            <div id="profitFields" class="token-fields" style="display:none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="profitSharePercentage" class="form-label">Profit Share % *</label>
                                        <input type="number" class="form-control form-control-enhanced" id="profitSharePercentage" 
                                            name="profitSharePercentage" min="1" max="100" value="10" required>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="profitDistributionFrequency" class="form-label">Distribution *</label>
                                        <select class="form-select form-control-enhanced" id="profitDistributionFrequency" 
                                            name="profitDistributionFrequency" required>
                                            <option value="monthly">Monthly</option>
                                            <option value="quarterly" selected>Quarterly</option>
                                            <option value="annually">Annually</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Ownership Fields -->
                            <div id="ownershipFields" class="token-fields" style="display:none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="ownershipPercentage" class="form-label">Ownership % *</label>
                                        <input type="number" class="form-control form-control-enhanced" id="ownershipPercentage" 
                                            name="ownershipPercentage" min="1" max="100" value="10" required>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-check mt-4 pt-2">
                                            <input class="form-check-input" type="checkbox" id="votingRights" name="votingRights">
                                            <label class="form-check-label" for="votingRights">Include Voting Rights</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Hybrid Fields -->
                            <div id="hybridFields" class="token-fields" style="display:none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="ownershipPerToken" class="form-label">Ownership Per Token *</label>
                                        <input type="number" step="0.01" class="form-control form-control-enhanced" id="ownershipPerToken" 
                                            name="ownershipPerToken" min="0.01" value="0.1" required>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="hybridRewardDescription" class="form-label">Reward Description *</label>
                                        <input type="text" class="form-control form-control-enhanced" id="hybridRewardDescription" 
                                            name="hybridRewardDescription" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-lg" id="submitButton">
                            <i class="bi bi-check-circle"></i> Create Campaign
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

    <!-- Edit Campaign Modal (Complete) -->
    <div class="modal fade" id="editCampaignModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content modal-enhancement">
                <div class="modal-header modal-header-enhancement">
                    <h5 class="modal-title">Edit Campaign</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body modal-body-enhancement">
                    <form id="editCampaignForm" action="/campaigns/update" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="editCampaignId" name="campaignId">
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editTitle" class="form-label">Campaign Title *</label>
                                <input type="text" class="form-control form-control-enhanced" id="editTitle" name="title" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editGoalAmount" class="form-label">Goal Amount ($) *</label>
                                <input type="number" class="form-control form-control-enhanced" id="editGoalAmount" name="goalAmount" min="1" required>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Description *</label>
                            <textarea class="form-control form-control-enhanced" id="editDescription" name="description" rows="4" required></textarea>
                        </div>
                        
                        <div class="mb-3">
                            <label for="editCampaignImage" class="form-label">Campaign Image</label>
                            <input class="form-control form-control-enhanced" type="file" id="editCampaignImage" name="image" accept="image/*">
                            <small class="text-muted">Leave blank to keep current image</small>
                        </div>
                        
                        <!-- Token Configuration -->
                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">Token Configuration</h5>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="editTokenSymbol" class="form-label">Token Symbol *</label>
                                        <input type="text" class="form-control form-control-enhanced" id="editTokenSymbol" name="tokenSymbol" 
                                            maxlength="8" required pattern="[A-Z0-9]{3,8}">
                                    </div>
                                    <div class="col-md-6">
                                        <label for="editStatus" class="form-label">Campaign Status *</label>
                                        <select class="form-select form-control-enhanced" id="editStatus" name="status" required>
                                            <option value="active">Active</option>
                                            <option value="paused">Paused</option>
                                            <option value="completed">Completed</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <!-- Dynamic Token Fields -->
                                <div id="editProfitFields" class="token-fields">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="editProfitSharePercentage" class="form-label">Profit Share % *</label>
                                            <input type="number" class="form-control form-control-enhanced" id="editProfitSharePercentage" 
                                                name="profitSharePercentage" min="1" max="100" required>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="editProfitDistributionFrequency" class="form-label">Distribution *</label>
                                            <select class="form-select form-control-enhanced" id="editProfitDistributionFrequency" 
                                                name="profitDistributionFrequency" required>
                                                <option value="monthly">Monthly</option>
                                                <option value="quarterly">Quarterly</option>
                                                <option value="annually">Annually</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                
                                <div id="editOwnershipFields" class="token-fields">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="editOwnershipPercentage" class="form-label">Ownership % *</label>
                                            <input type="number" class="form-control form-control-enhanced" id="editOwnershipPercentage" 
                                                name="ownershipPercentage" min="1" max="100" required>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-check mt-4 pt-2">
                                                <input class="form-check-input" type="checkbox" id="editVotingRights" name="votingRights">
                                                <label class="form-check-label" for="editVotingRights">Include Voting Rights</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div id="editHybridFields" class="token-fields">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="editOwnershipPerToken" class="form-label">Ownership Per Token *</label>
                                            <input type="number" step="0.01" class="form-control form-control-enhanced" id="editOwnershipPerToken" 
                                                name="ownershipPerToken" min="0.01" required>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="editHybridRewardDescription" class="form-label">Reward Description *</label>
                                            <input type="text" class="form-control form-control-enhanced" id="editHybridRewardDescription" 
                                                name="hybridRewardDescription" required>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-check-circle"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Invest Modal (Complete) -->
    <div class="modal fade" id="investModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content modal-enhancement">
                <div class="modal-header modal-header-enhancement">
                    <h5 class="modal-title" id="investModalTitle">Invest in Campaign</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body modal-body-enhancement">
                    <form id="investForm" action="/campaigns/invest" method="POST">
                        <input type="hidden" id="campaignId" name="campaignId">
                        <input type="hidden" id="tokenType" name="tokenType">
                        
                        <div class="mb-4">
                            <label for="investAmount" class="form-label">Investment Amount ($)</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text">$</span>
                                <input type="number" class="form-control form-control-enhanced" id="investAmount" 
                                       name="amount" min="1" required oninput="updateTokenPreview()">
                            </div>
                            <input type="range" class="form-range" id="investRange" 
                                   min="1" max="10000" step="1" 
                                   oninput="document.getElementById('investAmount').value = this.value; updateTokenPreview()">
                            <div class="d-flex justify-content-between small text-muted mt-1">
                                <span>$1</span>
                                <span>$5,000</span>
                                <span>$10,000+</span>
                            </div>
                        </div>
                        
                        <div class="investment-preview mb-4 p-3 bg-light rounded">
                            <h6 class="mb-3"><i class="bi bi-lightning-charge"></i> You'll Receive</h6>
                            
                            <div class="d-flex justify-content-between mb-2">
                                <span>Token Type:</span>
                                <strong id="previewTokenType"></strong>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Token Symbol:</span>
                                <strong id="previewTokenSymbol"></strong>
                            </div>
                            <div class="d-flex justify-content-between mb-3">
                                <span>Token Amount:</span>
                                <strong id="previewTokenAmount">0 tokens</strong>
                            </div>
                            
                            <div class="progress mb-2" style="height: 8px;">
                                <div class="progress-bar" style="width: 0%"></div>
                            </div>
                            
                            <div class="text-center mt-2">
                                <small class="text-muted" id="previewTokenValue">Enter amount to see details</small>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="paymentMethod" class="form-label">Payment Method *</label>
                            <select class="form-select form-control-enhanced" id="paymentMethod" name="paymentMethod" required>
                                <option value="">Select payment method</option>
                                <option value="crypto">Crypto (ETH)</option>
                                <option value="fiat">Credit/Debit Card</option>
                                <option value="wallet">Wallet Balance</option>
                            </select>
                        </div>
                        
                        <div class="d-grid">
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="bi bi-currency-dollar"></i> Confirm Investment
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        // Initialize animations
        AOS.init({
            duration: 800,
            easing: 'ease-out-quad',
            once: true
        });

        // Particle.js initialization
        particlesJS('particles-container', {
            particles: {
                number: { value: 30, density: { enable: true, value_area: 800 } },
                color: { value: "#6a11cb" },
                shape: { type: "circle" },
                opacity: { value: 0.5, random: true },
                size: { value: 3, random: true },
                line_linked: { enable: true, distance: 150, color: "#2575fc", opacity: 0.3, width: 1 },
                move: { enable: true, speed: 2, direction: "none", random: true, straight: false, out_mode: "out" }
            },
            interactivity: {
                detect_on: "canvas",
                events: {
                    onhover: { enable: true, mode: "repulse" },
                    onclick: { enable: true, mode: "push" }
                }
            }
        });

        // 3D Card Tilt Effect
        document.querySelectorAll('.campaign-card-3d').forEach(card => {
            card.addEventListener('mousemove', (e) => {
                const xAxis = (window.innerWidth / 2 - e.pageX) / 25;
                const yAxis = (window.innerHeight / 2 - e.pageY) / 25;
                card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
                
                // Parallax effect for image
                const image = card.querySelector('.parallax-image');
                if(image) {
                    image.style.transform = `scale(1.1) translateX(${xAxis * 0.5}px) translateY(${yAxis * 0.5}px)`;
                }
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'rotateY(0deg) rotateX(0deg)';
                const image = card.querySelector('.parallax-image');
                if(image) {
                    image.style.transform = 'scale(1)';
                }
            });
        });

        // Token Type Selection
        function selectTokenType(type) {
            document.querySelectorAll('.token-type-option').forEach(opt => {
                opt.classList.remove('active');
            });
            document.querySelector(`.token-type-option[data-type="${type}"]`).classList.add('active');
            document.getElementById('tokenType').value = type;
            
            // Hide all token fields
            document.querySelectorAll('.token-fields').forEach(el => {
                el.style.display = 'none';
            });
            
            // Show selected token type fields
            document.getElementById(`${type}Fields`).style.display = 'block';
        }

        // Load Edit Form Data
        function loadEditForm(campaignId) {
            fetch(`/api/campaigns/${campaignId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('editCampaignId').value = data._id;
                    document.getElementById('editTitle').value = data.title;
                    document.getElementById('editGoalAmount').value = data.goalAmount;
                    document.getElementById('editDescription').value = data.description;
                    document.getElementById('editTokenSymbol').value = data.tokenSymbol;
                    document.getElementById('editStatus').value = data.status;
                    
                    // Set token type specific fields
                    if(data.tokenType === 'profit') {
                        document.getElementById('editProfitSharePercentage').value = data.tokenMetadata.profitSharePercentage;
                        document.getElementById('editProfitDistributionFrequency').value = data.tokenMetadata.profitDistributionFrequency;
                    } else if(data.tokenType === 'ownership') {
                        document.getElementById('editOwnershipPercentage').value = data.tokenMetadata.ownershipPercentage;
                        document.getElementById('editVotingRights').checked = data.tokenMetadata.votingRights;
                    } else if(data.tokenType === 'hybrid') {
                        document.getElementById('editOwnershipPerToken').value = data.tokenMetadata.ownershipPerToken;
                        document.getElementById('editHybridRewardDescription').value = data.tokenMetadata.rewardDescription;
                    }
                });
        }

        // Investment Modal Setup
        function setupInvestmentModal(
            campaignId, 
            campaignTitle, 
            tokenType, 
            tokenSymbol, 
            goalAmount, 
            totalTokens, 
            profitShare, 
            ownershipPercentage,
            ownershipPerToken
        ) {
            document.getElementById('investModalTitle').textContent = `Invest in ${campaignTitle}`;
            document.getElementById('campaignId').value = campaignId;
            document.getElementById('tokenType').value = tokenType;
            document.getElementById('previewTokenType').textContent = 
                tokenType.charAt(0).toUpperCase() + tokenType.slice(1);
            document.getElementById('previewTokenSymbol').textContent = tokenSymbol;
            
            // Store additional data for calculations
            document.getElementById('investForm').dataset.goalAmount = goalAmount;
            document.getElementById('investForm').dataset.totalTokens = totalTokens;
            document.getElementById('investForm').dataset.profitShare = profitShare;
            document.getElementById('investForm').dataset.ownershipPercentage = ownershipPercentage;
            document.getElementById('investForm').dataset.ownershipPerToken = ownershipPerToken;
            
            // Reset amount field
            document.getElementById('investAmount').value = '';
            document.getElementById('investRange').value = '1';
            updateTokenPreview();
        }

        // Update Token Preview
        function updateTokenPreview() {
            const amount = parseFloat(document.getElementById('investAmount').value) || 0;
            const form = document.getElementById('investForm');
            const tokenType = form.querySelector('#tokenType').value;
            const goalAmount = parseFloat(form.dataset.goalAmount);
            const totalTokens = parseFloat(form.dataset.totalTokens);
            
            let tokenAmount = 0;
            let tokenValue = '';
            let iconClass = '';
            
            if (tokenType === 'profit') {
                const profitShare = parseFloat(form.dataset.profitShare);
                tokenAmount = (amount / goalAmount) * totalTokens;
                tokenValue = `Earns ${(profitShare * amount / goalAmount).toFixed(2)}% profit share`;
                iconClass = 'bi-graph-up-arrow';
            } 
            else if (tokenType === 'ownership') {
                const ownershipPercentage = parseFloat(form.dataset.ownershipPercentage);
                tokenAmount = (amount * totalTokens) / (goalAmount * (ownershipPercentage / 100));
                tokenValue = `${(ownershipPercentage * amount / goalAmount).toFixed(2)}% equity stake`;
                iconClass = 'bi-building';
            }
            else if (tokenType === 'hybrid') {
                const ownershipPerToken = parseFloat(form.dataset.ownershipPerToken);
                tokenAmount = amount;
                tokenValue = `${ownershipPerToken}% ownership + rewards`;
                iconClass = 'bi-collection';
            }
            
            document.getElementById('previewTokenAmount').innerHTML = `
                <i class="bi ${iconClass}"></i> ${tokenAmount.toFixed(2)} tokens`;
            document.getElementById('previewTokenValue').innerHTML = tokenValue;
            
            // Update visual indicator
            const progress = Math.min((amount / goalAmount) * 100, 100);
            document.querySelector('.progress-bar').style.width = `${progress}%`;
        }

        // Delete Confirmation
        function confirmDelete(campaignId) {
            if (confirm('Are you sure you want to delete this campaign? This action cannot be undone.')) {
                fetch(`/campaigns/${campaignId}`, {
                    method: 'DELETE',
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete campaign');
                    }
                });
            }
        }

        // Form Submission Loading States
        document.getElementById('createCampaignForm')?.addEventListener('submit', function(e) {
            const btn = this.querySelector('button[type="submit"]');
            btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
            btn.disabled = true;
        });

        document.getElementById('editCampaignForm')?.addEventListener('submit', function(e) {
            const btn = this.querySelector('button[type="submit"]');
            btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
            btn.disabled = true;
        });

        document.getElementById('investForm')?.addEventListener('submit', function(e) {
            const btn = this.querySelector('button[type="submit"]');
            btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
            btn.disabled = true;
        });
    </script>

    <script>
// Enhanced token type selection
function selectTokenType(type) {
    // Update UI
    document.querySelectorAll('.token-type-option').forEach(opt => {
        opt.classList.remove('active');
    });
    document.querySelector(`.token-type-option[data-type="${type}"]`).classList.add('active');
    
    // Update hidden field
    document.getElementById('tokenType').value = type;
    
    // Show/hide fields
    document.querySelectorAll('.token-fields').forEach(el => {
        el.style.display = 'none';
    });
    document.getElementById(`${type}Fields`).style.display = 'block';
}

// Form validation
function validateCampaignForm() {
    // Validate required fields
    const requiredFields = [
        'title', 'description', 'goalAmount', 
        'tokenSymbol', 'totalTokens', 'tokenType'
    ];
    
    for (const field of requiredFields) {
        const element = document.getElementById(field);
        if (!element || !element.value.trim()) {
            alert(`Please fill in the ${field.replace(/([A-Z])/g, ' $1').toLowerCase()} field`);
            if (element) element.focus();
            return false;
        }
    }
    
    // Validate token type specific fields
    const tokenType = document.getElementById('tokenType').value;
    
    if (tokenType === 'profit') {
        if (!document.getElementById('profitSharePercentage').value) {
            alert('Please enter profit share percentage');
            return false;
        }
    } 
    else if (tokenType === 'ownership') {
        if (!document.getElementById('ownershipPercentage').value) {
            alert('Please enter ownership percentage');
            return false;
        }
    }
    else if (tokenType === 'hybrid') {
        if (!document.getElementById('ownershipPerToken').value || 
            !document.getElementById('hybridRewardDescription').value) {
            alert('Please complete all hybrid token fields');
            return false;
        }
    }
    
    return true;
}

// Debug form submission
document.getElementById('createCampaignForm')?.addEventListener('submit', function(e) {
    console.log('Form submitted with data:', {
        title: this.title.value,
        description: this.description.value,
        goalAmount: this.goalAmount.value,
        tokenType: this.tokenType.value,
        tokenSymbol: this.tokenSymbol.value,
        totalTokens: this.totalTokens.value,
        image: this.image?.files[0]?.name || 'none'
    });
    
    if (!validateCampaignForm()) {
        e.preventDefault();
        return;
    }
    
    // Show loading state
    const btn = this.querySelector('button[type="submit"]');
    btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
    btn.disabled = true;
});
</script>

<script>
// Initialize token type selection
document.addEventListener('DOMContentLoaded', function() {
    // Default to profit type
    selectTokenType('profit');
});

// Token Type Selection
function selectTokenType(type) {
    // Update UI
    document.querySelectorAll('.token-type-option').forEach(opt => {
        opt.classList.remove('active');
    });
    document.querySelector(`.token-type-option[data-type="${type}"]`).classList.add('active');
    
    // Update hidden field
    document.getElementById('tokenType').value = type;
    
    // Show/hide fields
    document.querySelectorAll('.token-fields').forEach(el => {
        el.style.display = 'none';
    });
    document.getElementById(`${type}Fields`).style.display = 'block';
}

// Form Validation
function validateCampaignForm() {
    // Validate required fields
    const requiredFields = [
        'title', 'description', 'goalAmount', 
        'tokenSymbol', 'totalTokens', 'tokenType'
    ];
    
    for (const field of requiredFields) {
        const element = document.getElementById(field);
        if (!element || !element.value.trim()) {
            alert(`Please fill in the ${field.replace(/([A-Z])/g, ' $1').toLowerCase()} field`);
            if (element) element.focus();
            return false;
        }
    }
    
    // Validate token type specific fields
    const tokenType = document.getElementById('tokenType').value;
    
    if (tokenType === 'profit') {
        if (!document.getElementById('profitSharePercentage').value) {
            alert('Please enter profit share percentage');
            return false;
        }
    } 
    else if (tokenType === 'ownership') {
        if (!document.getElementById('ownershipPercentage').value) {
            alert('Please enter ownership percentage');
            return false;
        }
    }
    else if (tokenType === 'hybrid') {
        if (!document.getElementById('ownershipPerToken').value || 
            !document.getElementById('hybridRewardDescription').value) {
            alert('Please complete all hybrid token fields');
            return false;
        }
    }
    
    return true;
}

// Form Submission Handler
document.getElementById('createCampaignForm')?.addEventListener('submit', function(e) {
    if (!validateCampaignForm()) {
        e.preventDefault();
        return;
    }
    
    // Show loading state
    const btn = document.getElementById('submitButton');
    btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
    btn.disabled = true;
    
    // Allow form to submit normally if validation passes
});
</script>

<%- include("partials/footer") -%>